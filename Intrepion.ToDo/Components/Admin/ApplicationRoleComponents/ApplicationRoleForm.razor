<h1>@Mode ApplicationRole</h1>

<hr />
@if (ApplicationRole is not null)
{
    <EditForm Model="ApplicationRole"
              OnInvalidSubmit="(async () => await HandleSubmitAsync(false))"
              OnValidSubmit="(async () => await HandleSubmitAsync(true))">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <h2>Name</h2>
        <p>
            <label>
                Name:
                <InputText @bind-Value="ApplicationRole.Name" />
            </label>
        </p>
        <br />
        <button type="button" disabled="@Busy" class="btn btn-warning" @onclick="CancelAsync">
            Cancel
        </button>&nbsp;
        <button disabled="@Busy" type="submit" class="btn btn-primary">
            Submit
        </button>
    </EditForm>
}

@code {
    [Parameter]
    public EventCallback<bool> ValidationResult { get; set; }

    [Parameter]
    public EventCallback CancelRequest { get; set; }

    [Parameter]
    public bool IsAdd { get; set; }

    [Parameter]
    public ApplicationRole? ApplicationRole { get; set; }

    [Parameter]
    public ApplicationRole? DbApplicationRole { get; set; }

    [Parameter]
    public bool Busy { get; set; }

    private string Mode => IsAdd ? "Add" : "Edit";

    private async Task CancelAsync() => await CancelRequest.InvokeAsync(null);

    private async Task HandleSubmitAsync(bool isValid) => await ValidationResult.InvokeAsync(isValid);
}
