@page "/admin/UrlNamePlaceholder-list"
@rendermode InteractiveServer
@inject AuthenticationStateProvider GetAuthenticationStateAsync
@inject IToDoItemAdminService ToDoItemAdminService
@attribute [StreamRendering]

<PageTitle>To Do Item List</PageTitle>

<section>
    <h1>To Do Item List</h1>
    <article>
        <table class="table table-striped table-sm">
            <thead>
                <tr>
                    <th scope="col">Id</th>
                    @* ListHeaderCodePlaceholder *@
                    <th scope="col">Actions</th>
                </tr>
            </thead>
            <tbody>
                @if (toDoItems == null)
                {
                    <tr>
                        @* LoadingCountCodePlaceholder *@
                    </tr>
                }
                else if (toDoItems.Count == 0)
                {
                    <tr>
                        @* ZeroCountCodePlaceholder *@
                    </tr>
                }
                else
                {
                    @foreach (var toDoItem in toDoItems)
                    {
                        <tr>
                            <td>@toDoItem.Id</td>
                            @* ListItemCodePlaceholder *@
                            <td>
                                <a href="@("/admin/UrlNamePlaceholder-edit/" + toDoItem.Id)">Edit</a>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
        <a href="/admin/UrlNamePlaceholder-edit">Create</a>
    </article>
</section>

@code {
    List<ToDoItem>? toDoItems = null;

    protected override async Task OnInitializedAsync()
    {
        var authState = await GetAuthenticationStateAsync.GetAuthenticationStateAsync();
        var userName = authState.User.Identity?.Name;

        if (userName == null)
        {
            return;
        }

        toDoItems = await ToDoItemAdminService.GetAllAsync(userName);
    }
}
