@page "/admin/to-do-item-list"
@inject IToDoItemAdminService ToDoItemAdminService
@attribute [StreamRendering]

<section>
    <h1>To Do Item List</h1>
    <article>
        <table class="table table-striped table-sm">
            <thead>
                <tr>
                    <th scope="col">Id</th>
                    <th scope="col">Title</th>
                    @* ListHeaderCodePlaceholder *@
                    <th scope="col">Actions</th>
                </tr>
            </thead>
            <tbody>
                @if (toDoItems == null)
                {
                    <tr>
                        <td colspan="4">Loading...</td>
                        @* LoadingCountCodePlaceholder *@
                    </tr>
                }
                else if (toDoItems.Count == 0)
                {
                    <tr>
                        <td colspan="4">No to do items found.</td>
                        @* ZeroCountCodePlaceholder *@
                    </tr>
                }
                else
                {
                    @foreach (var toDoItem in toDoItems)
                    {
                        <tr>
                            <td>@toDoItem.Id</td>
                            <td>@toDoItem.Title</td>
                            @* ListItemCodePlaceholder *@
                            <td>
                                <NavButton Href="@("/admin/to-do-item-edit/" + toDoItem.Id)" Name="Edit" />
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
        <NavButton Href="/admin/to-do-item-edit" Name="Create" />
    </article>
</section>

@code {
    List<ToDoItem>? toDoItems = null;

    protected override async Task OnInitializedAsync()
    {
        toDoItems = await ToDoItemAdminService.GetAllAsync();
    }
}
