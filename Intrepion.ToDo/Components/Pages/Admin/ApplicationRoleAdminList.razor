@page "/admin/application-role-list"
@rendermode InteractiveServer
@inject IApplicationRoleAdminService ApplicationRoleAdminService
@inject AuthenticationStateProvider GetAuthenticationStateAsync
@attribute [StreamRendering]

<section>
    <h1>Application Role List</h1>
    <article>
        <table class="table table-striped table-sm">
            <thead>
                <tr>
                    <th scope="col">Id</th>
                    <th scope="col">Name</th>
                    <th scope="col">Actions</th>
                </tr>
            </thead>
            <tbody>
                @if (applicationRoleAdminDtos == null)
                {
                    <tr>
                        <td colspan="3">Loading...</td>
                    </tr>
                }
                else if (applicationRoleAdminDtos.Count == 0)
                {
                    <tr>
                        <td colspan="3">No application roles found.</td>
                    </tr>
                }
                else
                {
                    @foreach (var applicationRoleAdminDto in applicationRoleAdminDtos)
                    {
                        <tr>
                            <td>@applicationRoleAdminDto.Id</td>
                            <td>@applicationRoleAdminDto.Name</td>
                            <td>
                                <NavLink href="@("/admin/application-role-edit/" + applicationRoleAdminDto.Id)">Edit</NavLink>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
        <NavLink Href="/admin/application-role-edit">Create</NavLink>
    </article>
</section>

@code {
    List<ApplicationRoleAdminDto>? applicationRoleAdminDtos = null;

    protected override async Task OnInitializedAsync()
    {
        var authState = await GetAuthenticationStateAsync.GetAuthenticationStateAsync();
        var userName = authState.User.Identity?.Name;

        if (userName == null)
        {
            return;
        }

        applicationRoleAdminDtos = await ApplicationRoleAdminService.GetAllAsync(userName);
    }
}
