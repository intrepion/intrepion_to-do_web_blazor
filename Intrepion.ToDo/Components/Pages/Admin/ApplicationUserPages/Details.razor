@page "/applicationusers/details"
@using Microsoft.EntityFrameworkCore
@using Intrepion.ToDo.BusinessLogic.Entities
@inject IDbContextFactory<Intrepion.ToDo.BusinessLogic.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h2>ApplicationUser</h2>
    <hr />
    @if (applicationuser is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">UserName</dt>
            <dd class="col-sm-10">@applicationuser.UserName</dd>
            <dt class="col-sm-2">NormalizedUserName</dt>
            <dd class="col-sm-10">@applicationuser.NormalizedUserName</dd>
            <dt class="col-sm-2">Email</dt>
            <dd class="col-sm-10">@applicationuser.Email</dd>
            <dt class="col-sm-2">NormalizedEmail</dt>
            <dd class="col-sm-10">@applicationuser.NormalizedEmail</dd>
            <dt class="col-sm-2">EmailConfirmed</dt>
            <dd class="col-sm-10">@applicationuser.EmailConfirmed</dd>
            <dt class="col-sm-2">PasswordHash</dt>
            <dd class="col-sm-10">@applicationuser.PasswordHash</dd>
            <dt class="col-sm-2">SecurityStamp</dt>
            <dd class="col-sm-10">@applicationuser.SecurityStamp</dd>
            <dt class="col-sm-2">ConcurrencyStamp</dt>
            <dd class="col-sm-10">@applicationuser.ConcurrencyStamp</dd>
            <dt class="col-sm-2">PhoneNumber</dt>
            <dd class="col-sm-10">@applicationuser.PhoneNumber</dd>
            <dt class="col-sm-2">PhoneNumberConfirmed</dt>
            <dd class="col-sm-10">@applicationuser.PhoneNumberConfirmed</dd>
            <dt class="col-sm-2">TwoFactorEnabled</dt>
            <dd class="col-sm-10">@applicationuser.TwoFactorEnabled</dd>
            <dt class="col-sm-2">LockoutEnd</dt>
            <dd class="col-sm-10">@applicationuser.LockoutEnd</dd>
            <dt class="col-sm-2">LockoutEnabled</dt>
            <dd class="col-sm-10">@applicationuser.LockoutEnabled</dd>
            <dt class="col-sm-2">AccessFailedCount</dt>
            <dd class="col-sm-10">@applicationuser.AccessFailedCount</dd>
        </dl>
        <div>
            <a href="@($"/applicationusers/edit?id={applicationuser.Id}")">Edit</a> |
            <a href="@($"/applicationusers")">Back to List</a>
        </div>
    }
</div>

@code {
    private ApplicationUser? applicationuser;

    [SupplyParameterFromQuery]
    private Guid Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        applicationuser = await context.Users.FirstOrDefaultAsync(m => m.Id == Id);

        if (applicationuser is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
