@page "/application-role-list"
@inject IApplicationRoleService ApplicationRoleService
@attribute [StreamRendering]

<h3>Application Roles List</h3>

@if (applicationRoles == null)
{
    <span>Loading...</span>
}
else if (applicationRoles.Count == 0)
{
    <span>No application roles found.</span>
}
else
{
    <table class="table table-striped table-sm">
        <thead>
            <tr>
                <th scope="col">Id</th>
                <th scope="col">Name</th>
                <th scope="col">NormalizedName</th>
                <th scope="col">Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var applicationRole in applicationRoles)
            {
                <tr>
                    <td>@applicationRole.Id</td>
                    <td>@applicationRole.Name</td>
                    <td>@applicationRole.NormalizedName</td>
                    <td>@applicationRole.ConcurrencyStamp</td>
                    <td>
                        @if (applicationRole.Id != null)
                        {
                            <NavButton Href="@("/application-role-edit/" + applicationRole.Id)" Name="Edit" />
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
<NavButton Href="/application-role-edit" Name="Create" />

@code {
    List<ApplicationRole>? applicationRoles = null;

    protected override async Task OnInitializedAsync()
    {
        applicationRoles = await ApplicationRoleService.GetAllAsync();
    }
}
